# Chunk 6: period_fig
## I plot two charts separately and then combine them in one plot so that data
## be shown in descending order of tf_idf
## Split text to tokens
reflection_period_words <- hm_data %>%
unnest_tokens(word, text) %>%
count(reflection_period, word, sort = TRUE) %>%
ungroup()
## Calculate tf_idf
reflection_period_words <- reflection_period_words %>%
bind_tf_idf(word, reflection_period, n)
## Plot bar chart for hours_24
df_hours <- reflection_period_words %>%
filter(reflection_period=="hours_24") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = reflection_period)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~reflection_period, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for months_3
df_months <- reflection_period_words %>%
filter(reflection_period=="months_3") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = reflection_period)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~reflection_period, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine two charts
grid.arrange(df_hours,df_months,nrow=1)
# Chunk 7: gender_fig
## Split data to 4 groups based on marital and gender
hm_data <- hm_data %>%
mutate(gender_marital = ifelse(marital == "Single" & gender == "Male", "Single Male",
ifelse(marital == "Single" & gender == "Female", "Single Female",
ifelse(marital == "Married" & gender == "Male", "Married Male",
ifelse(marital == "Married" & gender == "Female", "Married Female","")))))
month_words <- hm_data %>%
filter(reflection_period == "months_3")
## Calculate tf_idf
gender_marital_words <- month_words %>%
unnest_tokens(word, text) %>%
count(gender_marital, word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word, gender_marital, n)
## Plot bar chart for single male
df_sm <- gender_marital_words %>%
filter(gender_marital=="Single Male") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for married male
df_mm <- gender_marital_words %>%
filter(gender_marital=="Married Male") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#3399FF") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for single female
df_sf <- gender_marital_words %>%
filter(gender_marital=="Single Female") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for married female
df_mf <- gender_marital_words %>%
filter(gender_marital=="Married Female") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#FF6666") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine four charts
grid.arrange(df_sm, df_mm, df_sf, df_mf, nrow=2, ncol=2)
# Chunk 8: parent_fig
## Tokenize
parent_words <- month_words %>%
unnest_tokens(word, text) %>%
count(parenthood, word, sort = TRUE) %>%
ungroup()
## Calculate tf_idf
parent_words <- parent_words %>%
bind_tf_idf(word, parenthood, n)
## Plot bar chart for having children
df_parent_y <- parent_words %>%
filter(parenthood == "Children") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = parenthood)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~parenthood, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for no children
df_parent_n <- parent_words %>%
filter(parenthood == "No_Children") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = parenthood)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~parenthood, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine two charts
grid.arrange(df_parent_y, df_parent_n, nrow=1)
# Chunk 9: age_fig
## Split data to 6 groups based on age range
hm_data <- hm_data %>%
mutate(age_category = ifelse(age < 10, "Below 10",
ifelse(age >= 10 & age < 20, "10 ~ 20",
ifelse(age >= 20 & age < 30, "20 ~ 30",
ifelse(age >= 30 & age < 40, "30 ~ 40",
ifelse(age >= 40 & age < 50, "40 ~ 50",
ifelse(age >= 50 & age < 60, "50 ~ 60",
ifelse(age >= 60, "Above 60",""))))))))
## Create word pairs
month_bigrams <- hm_data %>%
filter(reflection_period == "months_3") %>%
filter(count != 1) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
## Calculate tf_idf
bigram_tf_idf <- month_bigrams %>%
count(age_category, bigram) %>%
bind_tf_idf(bigram, age_category, n) %>%
arrange(desc(tf_idf))
## Plot bar chart for 10s
bigram1 <- bigram_tf_idf %>%
filter(age_category == "10 ~ 20") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 20s
bigram2 <- bigram_tf_idf %>%
filter(age_category == "20 ~ 30") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#CC6633") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 30s
bigram3 <- bigram_tf_idf %>%
filter(age_category == "30 ~ 40") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#336600") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 40s
bigram4 <- bigram_tf_idf %>%
filter(age_category == "40 ~ 50") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#0066CC") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 50s
bigram5 <- bigram_tf_idf %>%
filter(age_category == "50 ~ 60") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for >60
bigram6 <- bigram_tf_idf %>%
filter(age_category == "Above 60") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#000099") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine charts
grid.arrange(bigram1, bigram2, bigram3, bigram4, bigram5, bigram6, nrow=3, ncol=2, bottom = "x-axis = tf_idf")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(ggplot2)
library(igraph)
library(ggraph)
library(grid)
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
hm_data <- hm_data %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(modified == "TRUE") %>%
inner_join(demo_data, by = "wid") %>%
select(cleaned_hm,
count,
gender,
marital,
parenthood,
reflection_period,
age,
country,
text) %>%
filter(gender %in% c("m", "f")) %>%
mutate(gender = fct_recode(gender, Male = "m", Female = "f")) %>%
filter(marital %in% c("single", "married")) %>%
mutate(marital = fct_recode(marital, Single = "single", Married = "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
mutate(parenthood = fct_recode(parenthood, Children = "y", No_Children = "n")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period, months_3 = "3m", hours_24 = "24h"))
## Visulaize wordpairs
bigram_counts <- hm_data %>%
filter(count != 1) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
count(word1, word2, sort = TRUE)
bigram_graph <- bigram_counts %>%
slice(1:50) %>%
graph_from_data_frame()
set.seed(2017)
x <- grid::arrow(type = "closed", length = unit(.05, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = x, end_cap = circle(.05, 'inches')) +
geom_node_point(color = "#006699", size = 2) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()+
theme(plot.title = element_text(hjust = 0.5,face = "bold",size=20))
## I plot two charts separately and then combine them in one plot so that data
## be shown in descending order of tf_idf
## Split text to tokens
reflection_period_words <- hm_data %>%
unnest_tokens(word, text) %>%
count(reflection_period, word, sort = TRUE) %>%
ungroup()
## Calculate tf_idf
reflection_period_words <- reflection_period_words %>%
bind_tf_idf(word, reflection_period, n)
## Plot bar chart for hours_24
df_hours <- reflection_period_words %>%
filter(reflection_period=="hours_24") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = reflection_period)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~reflection_period, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for months_3
df_months <- reflection_period_words %>%
filter(reflection_period=="months_3") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = reflection_period)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~reflection_period, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine two charts
grid.arrange(df_hours,df_months,nrow=1)
## Split data to 4 groups based on marital and gender
hm_data <- hm_data %>%
mutate(gender_marital = ifelse(marital == "Single" & gender == "Male", "Single Male",
ifelse(marital == "Single" & gender == "Female", "Single Female",
ifelse(marital == "Married" & gender == "Male", "Married Male",
ifelse(marital == "Married" & gender == "Female", "Married Female","")))))
month_words <- hm_data %>%
filter(reflection_period == "months_3")
## Calculate tf_idf
gender_marital_words <- month_words %>%
unnest_tokens(word, text) %>%
count(gender_marital, word, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(word, gender_marital, n)
## Plot bar chart for single male
df_sm <- gender_marital_words %>%
filter(gender_marital=="Single Male") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for married male
df_mm <- gender_marital_words %>%
filter(gender_marital=="Married Male") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#3399FF") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for single female
df_sf <- gender_marital_words %>%
filter(gender_marital=="Single Female") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for married female
df_mf <- gender_marital_words %>%
filter(gender_marital=="Married Female") %>%
arrange(desc(tf_idf)) %>%
head(5) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = gender_marital)) +
scale_fill_manual(values="#FF6666") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~gender_marital, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine four charts
grid.arrange(df_sm, df_mm, df_sf, df_mf, nrow=2, ncol=2)
## Tokenize
parent_words <- month_words %>%
unnest_tokens(word, text) %>%
count(parenthood, word, sort = TRUE) %>%
ungroup()
## Calculate tf_idf
parent_words <- parent_words %>%
bind_tf_idf(word, parenthood, n)
## Plot bar chart for having children
df_parent_y <- parent_words %>%
filter(parenthood == "Children") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = parenthood)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~parenthood, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for no children
df_parent_n <- parent_words %>%
filter(parenthood == "No_Children") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(word,tf_idf,order=TRUE), tf_idf, fill = parenthood)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~parenthood, ncol = 2, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine two charts
grid.arrange(df_parent_y, df_parent_n, nrow=1)
## Split data to 6 groups based on age range
hm_data <- hm_data %>%
mutate(age_category = ifelse(age < 10, "Below 10",
ifelse(age >= 10 & age < 20, "10 ~ 20",
ifelse(age >= 20 & age < 30, "20 ~ 30",
ifelse(age >= 30 & age < 40, "30 ~ 40",
ifelse(age >= 40 & age < 50, "40 ~ 50",
ifelse(age >= 50 & age < 60, "50 ~ 60",
ifelse(age >= 60, "Above 60",""))))))))
## Create word pairs
month_bigrams <- hm_data %>%
filter(reflection_period == "months_3") %>%
filter(count != 1) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2)
## Calculate tf_idf
bigram_tf_idf <- month_bigrams %>%
count(age_category, bigram) %>%
bind_tf_idf(bigram, age_category, n) %>%
arrange(desc(tf_idf))
## Plot bar chart for 10s
bigram1 <- bigram_tf_idf %>%
filter(age_category == "10 ~ 20") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#993333") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 20s
bigram2 <- bigram_tf_idf %>%
filter(age_category == "20 ~ 30") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#CC6633") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 30s
bigram3 <- bigram_tf_idf %>%
filter(age_category == "30 ~ 40") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#336600") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 40s
bigram4 <- bigram_tf_idf %>%
filter(age_category == "40 ~ 50") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#0066CC") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for 50s
bigram5 <- bigram_tf_idf %>%
filter(age_category == "50 ~ 60") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#006699") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Plot bar chart for >60
bigram6 <- bigram_tf_idf %>%
filter(age_category == "Above 60") %>%
arrange(desc(tf_idf)) %>%
head(10) %>%
ggplot(aes(reorder(bigram, tf_idf, order=TRUE), tf_idf, fill = age_category)) +
scale_fill_manual(values="#000099") +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = NULL) +
facet_wrap(~age_category, ncol = 1, scales = "free") +
theme(strip.text = element_text(size=12, face = "bold")) +
coord_flip()
## Combine charts
grid.arrange(bigram1, bigram2, bigram3, bigram4, bigram5, bigram6, nrow=3, ncol=2, bottom = "x-axis = tf_idf")
